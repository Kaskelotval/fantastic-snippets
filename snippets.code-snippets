{	"Insert test skeleton": {
		"prefix": "jestTest",
		"body": [
			"/**",
			"* @jest-environment jsdom",
			"*/",
			"import React from 'react';",
			"describe('$1',()=>{",
			"",
			"beforeAll(()=>{})",
			"",
			"it('$2',()=>{$3})",
			"})"
		]
	},
	"Insert jest it": {
		"prefix": "jestIt",
		"body": [
			"it('$1',()=>{$2})"
		]
	},
	"Insert jest beforeAll": {
		"prefix": "jestBefore",
		"body": [
			"beforeAll(()=>{$1})",
		]
	},
	"FC skeleton with Props": {
		"prefix": "snFCProps",
		"body": [
			"import React from 'react';",
			"type $1Props = {};",
			"export const $1: React.FC<$1Props> = ({}) => {",
			"return (<></>)",
			"}"
		]
	},
	"useState Snip": {
		"prefix": "snUseState",
		"body": [
			"const [$1, set${1/^(.)(.*)$/${1:/upcase}${2}/}] = useState<$3>({$4})"

		]
	},
	"i18 Snip": {
		"prefix": "sni18",
		"body": [
			"const { t } = useI18nTranslation();"
		]
	},
	"useEffect Snip": {
		"prefix": "snUseEffect",
		"body": [
			"useEffect(() => {}, [$1]);"
		]
	},
	"fluent Style Snip": {
		"prefix": "sni18",
		"body": [
			"const { t } = useI18nTranslation();"
		]
	},
	"Snip Fluent Style": {
		"prefix": "snFluentStyle",
		"body": [
			"import { mergeStyleSets } from '@fluentui/react';",
			"type IComponentClassNames = {",	
			"};",
			"export const getClassNames = (): IComponentClassNames => {",
			"return mergeStyleSets({",
			  "});",
			"};"
		]
	},
}